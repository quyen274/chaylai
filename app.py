import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from datetime import datetime, timedelta
from streamlit_option_menu import option_menu

# C·∫•u h√¨nh Streamlit
st.set_page_config(page_title="Facebook & Shopee Analysis", layout="wide")

# S·ª≠ d·ª•ng session_state ƒë·ªÉ l∆∞u d·ªØ li·ªáu gi·ªØa c√°c thao t√°c
if "fb_data" not in st.session_state:
    st.session_state.fb_data = None
if "shopee_data" not in st.session_state:
    st.session_state.shopee_data = None

# Thanh ƒëi·ªÅu h∆∞·ªõng
with st.sidebar:
    selected = option_menu(
        "Menu", ["Crawl D·ªØ Li·ªáu", "Ph√¢n T√≠ch D·ªØ Li·ªáu"],
        icons=["cloud-download", "bar-chart"],
        default_index=0,
    )

# H√†m t·∫°o d·ªØ li·ªáu gi·∫£ l·∫≠p Facebook
def generate_fake_facebook_data(days=30, keyword="labubu"):
    date_range = [datetime.now() - timedelta(days=i) for i in range(days)]
    data = {
        "Date": date_range,
        "Posts": np.random.randint(20, 100, days),
        "Likes": np.random.randint(100000, 2000000, days),
        "Comments": np.random.randint(20000, 400000, days),
        "Shares": np.random.randint(10000, 200000, days),
    }
    return pd.DataFrame(data)

# H√†m t·∫°o d·ªØ li·ªáu gi·∫£ l·∫≠p Shopee
def generate_fake_shopee_data(days=30, keyword="labubu"):
    date_range = [datetime.now() - timedelta(days=i) for i in range(days)]
    total_products = 500
    data = {
        "Date": date_range,
        "Products": total_products,
        "Average Price": np.random.uniform(50000, 500000, days),
        "Total Sales": np.random.randint(500, 5000, days),
        "Positive Reviews": np.random.randint(300, 3000, days),
    }
    return pd.DataFrame(data)

# H√†m d·ª± ƒëo√°n xu h∆∞·ªõng
def predict_trend(data, column, future_days=30):
    data["Day"] = range(len(data))
    X = data[["Day"]]
    y = data[column]

    model = LinearRegression()
    model.fit(X, y)

    future_X = np.array(range(len(data), len(data) + future_days)).reshape(-1, 1)
    future_y = model.predict(future_X)
    return future_y

# Giao di·ªán Crawl D·ªØ Li·ªáu
if selected == "Crawl D·ªØ Li·ªáu":
    st.title("üîó Crawl D·ªØ Li·ªáu Facebook & Shopee (Gi·∫£ L·∫≠p)")

    # Facebook Crawl
    st.subheader("üìä Crawl D·ªØ Li·ªáu Facebook")
    keyword_fb = st.text_input("Nh·∫≠p t·ª´ kh√≥a t√¨m ki·∫øm Facebook:", value="labubu")
    posts_fb = st.slider("S·ªë ng√†y c·∫ßn t·∫°o d·ªØ li·ªáu:", 1, 30, 30)
    if st.button("Crawl D·ªØ Li·ªáu Facebook"):
        st.session_state.fb_data = generate_fake_facebook_data(posts_fb, keyword_fb)
        st.success("D·ªØ li·ªáu Facebook ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!")

    # Shopee Crawl
    st.subheader("üõí Crawl D·ªØ Li·ªáu Shopee")
    keyword_shopee = st.text_input("Nh·∫≠p t·ª´ kh√≥a t√¨m ki·∫øm Shopee:", value="labubu")
    days_shopee = st.slider("S·ªë ng√†y c·∫ßn t·∫°o d·ªØ li·ªáu Shopee:", 1, 30, 30)
    if st.button("Crawl D·ªØ Li·ªáu Shopee"):
        st.session_state.shopee_data = generate_fake_shopee_data(days_shopee, keyword_shopee)
        st.success("D·ªØ li·ªáu Shopee ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!")

# Giao di·ªán Ph√¢n T√≠ch D·ªØ Li·ªáu
if selected == "Ph√¢n T√≠ch D·ªØ Li·ªáu":
    st.title("üìà Ph√¢n T√≠ch D·ªØ Li·ªáu v√† D·ª± ƒêo√°n Xu H∆∞·ªõng")

    # Ph√¢n t√≠ch Facebook
    st.subheader("üí¨ Ph√¢n T√≠ch D·ªØ Li·ªáu Facebook")
    if st.session_state.fb_data is not None:
        fb_data = st.session_state.fb_data
        st.dataframe(fb_data)

        st.subheader("üìä Bi·ªÉu ƒê·ªì Ph√¢n T√≠ch Facebook")
        fig, ax = plt.subplots()
        ax.plot(fb_data["Date"], fb_data["Likes"], label="Likes", color="blue")
        ax.plot(fb_data["Date"], fb_data["Comments"], label="Comments", color="orange")
        ax.plot(fb_data["Date"], fb_data["Shares"], label="Shares", color="green")
        plt.legend()
        plt.title("Xu H∆∞·ªõng T∆∞∆°ng T√°c Facebook")
        st.pyplot(fig)
    else:
        st.warning("Ch∆∞a c√≥ d·ªØ li·ªáu Facebook. Vui l√≤ng crawl d·ªØ li·ªáu tr∆∞·ªõc.")

    # Ph√¢n t√≠ch Shopee
    st.subheader("üõí Ph√¢n T√≠ch D·ªØ Li·ªáu Shopee")
    if st.session_state.shopee_data is not None:
        shopee_data = st.session_state.shopee_data
        st.dataframe(shopee_data)

        st.subheader("üìä Bi·ªÉu ƒê·ªì Ph√¢n T√≠ch Shopee")
        fig, ax = plt.subplots()
        ax.plot(shopee_data["Date"], shopee_data["Total Sales"], label="Total Sales", color="blue")
        ax.plot(shopee_data["Date"], shopee_data["Average Price"], label="Average Price", color="orange")
        plt.legend()
        plt.title("Xu H∆∞·ªõng B√°n H√†ng Shopee")
        st.pyplot(fig)

        st.subheader("üîÆ D·ª± ƒêo√°n S·ªë L∆∞·ª£ng C√≥ Th·ªÉ B√°n")
        future_days = 30
        sales_prediction = predict_trend(shopee_data, "Total Sales", future_days)
        future_dates = pd.date_range(shopee_data["Date"].max(), periods=future_days)

        # V·∫Ω bi·ªÉu ƒë·ªì d·ª± ƒëo√°n
        fig, ax = plt.subplots()
        ax.bar(future_dates, sales_prediction, color="green")
        plt.title("D·ª± ƒêo√°n S·ªë L∆∞·ª£ng B√°n Trong 30 Ng√†y Ti·∫øp Theo")
        st.pyplot(fig)
    else:
        st.warning("Ch∆∞a c√≥ d·ªØ li·ªáu Shopee. Vui l√≤ng crawl d·ªØ li·ªáu tr∆∞·ªõc.")
